From 18d2b02b86442797ca312a3bd16deb5df562b4b0 Mon Sep 17 00:00:00 2001
Message-Id: <18d2b02b86442797ca312a3bd16deb5df562b4b0.1557924032.git.dongsu@kinvolk.io>
From: Dongsu Park <dongsu@kinvolk.io>
Date: Mon, 15 Apr 2019 18:34:44 +0200
Subject: [PATCH] support PodSecurityPolicy

generate istio*yaml files like:

```
make installgen HUB=docker.io/istio TAG=1.1.6
```
---
 Makefile                                      |  3 +
 .../helm/istio-init/files/psp-11.yaml         | 55 +++++++++++++++++++
 .../istio-init/templates/clusterrole.yaml     |  8 +++
 .../charts/galley/templates/clusterrole.yaml  |  8 +++
 .../gateways/templates/clusterrole.yaml       |  8 +++
 .../helm/istio/charts/gateways/values.yaml    |  4 --
 .../istiocoredns/templates/clusterrole.yaml   |  8 +++
 .../charts/kiali/templates/clusterrole.yaml   |  9 +++
 .../charts/mixer/templates/clusterrole.yaml   | 10 +++-
 .../istio/charts/mixer/templates/config.yaml  | 34 ------------
 .../helm/istio/charts/mixer/values.yaml       |  2 -
 .../charts/pilot/templates/clusterrole.yaml   |  8 +++
 .../prometheus/templates/clusterrole.yaml     |  8 +++
 .../security/templates/clusterrole.yaml       |  8 +++
 .../create-custom-resources-job.yaml          | 34 +++++++-----
 .../templates/clusterrole.yaml                |  8 +++
 .../helm/istio/templates/clusterrole.yaml     | 20 +++++--
 .../helm/istio/values-istio-demo-common.yaml  | 11 ----
 install/kubernetes/helm/istio/values.yaml     |  2 -
 19 files changed, 175 insertions(+), 73 deletions(-)
 create mode 100644 install/kubernetes/helm/istio-init/files/psp-11.yaml

diff --git a/Makefile b/Makefile
index dfbbe02f..3204b31c 100644
--- a/Makefile
+++ b/Makefile
@@ -633,6 +633,7 @@ artifacts: docker
 # create istio-init.yaml
 istio-init.yaml: $(HELM) $(HOME)/.helm
 	cat install/kubernetes/namespace.yaml > install/kubernetes/$@
+	cat install/kubernetes/helm/istio-init/files/psp-* >> install/kubernetes/$@
 	cat install/kubernetes/helm/istio-init/files/crd-* >> install/kubernetes/$@
 	$(HELM) template --name=istio --namespace=istio-system \
 		--set global.tag=${TAG} \
@@ -647,6 +648,7 @@ istio-demo.yaml istio-demo-auth.yaml: export EXTRA_HELM_SETTINGS+=--values insta
 # Ensure that values-$filename is present in install/kubernetes/helm/istio
 istio-demo.yaml istio-demo-auth.yaml istio-remote.yaml istio-minimal.yaml: $(HELM) $(HOME)/.helm
 	cat install/kubernetes/namespace.yaml > install/kubernetes/$@
+	cat install/kubernetes/helm/istio-init/files/psp-* >> install/kubernetes/$@
 	cat install/kubernetes/helm/istio-init/files/crd-* >> install/kubernetes/$@
 	$(HELM) template \
 		--name=istio \
@@ -683,6 +685,7 @@ generate_e2e_yaml_coredump: export ENABLE_COREDUMP=true
 # Create yaml files for e2e tests. Applies values-e2e.yaml, then values-$filename.yaml
 $(e2e_files): $(HELM) $(HOME)/.helm istio-init.yaml
 	cat install/kubernetes/namespace.yaml > install/kubernetes/$@
+	cat install/kubernetes/helm/istio-init/files/psp-* >> install/kubernetes/$@
 	cat install/kubernetes/helm/istio-init/files/crd-* >> install/kubernetes/$@
 	$(HELM) template \
 		--name=istio \
diff --git a/install/kubernetes/helm/istio-init/files/psp-11.yaml b/install/kubernetes/helm/istio-init/files/psp-11.yaml
new file mode 100644
index 00000000..664b6fa2
--- /dev/null
+++ b/install/kubernetes/helm/istio-init/files/psp-11.yaml
@@ -0,0 +1,55 @@
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: psp-istio
+spec:
+  privileged: false
+  allowPrivilegeEscalation: false
+  allowedCapabilities:
+    - NET_ADMIN
+    - NET_RAW
+  hostNetwork: true
+  hostIPC: true
+  hostPID: true
+  fsGroup:
+    rule: 'RunAsAny'
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'RunAsAny'
+  # Allow core volume types.
+  volumes:
+    - "*"
+  readOnlyRootFilesystem: false
+---
+kind: ClusterRole
+apiVersion: rbac.authorization.k8s.io/v1
+metadata:
+  name: psp-user
+rules:
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: psp-user-binding
+  namespace: default
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: psp-user
+subjects:
+- apiGroup: ""
+  kind: ServiceAccount
+  name: default
+  namespace: default
+---
diff --git a/install/kubernetes/helm/istio-init/templates/clusterrole.yaml b/install/kubernetes/helm/istio-init/templates/clusterrole.yaml
index 4f0cf865..874fae3b 100644
--- a/install/kubernetes/helm/istio-init/templates/clusterrole.yaml
+++ b/install/kubernetes/helm/istio-init/templates/clusterrole.yaml
@@ -12,3 +12,11 @@ kind: ClusterRole
 - apiGroups: ["apiextensions.k8s.io"]
   resources: ["customresourcedefinitions"]
   verbs: ["create", "get", "list", "watch", "patch"]
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
diff --git a/install/kubernetes/helm/istio/charts/galley/templates/clusterrole.yaml b/install/kubernetes/helm/istio/charts/galley/templates/clusterrole.yaml
index 6385c888..d602113b 100644
--- a/install/kubernetes/helm/istio/charts/galley/templates/clusterrole.yaml
+++ b/install/kubernetes/helm/istio/charts/galley/templates/clusterrole.yaml
@@ -37,3 +37,11 @@ kind: ClusterRole
   resources: ["deployments/finalizers"]
   resourceNames: ["istio-galley"]
   verbs: ["update"]
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
diff --git a/install/kubernetes/helm/istio/charts/gateways/templates/clusterrole.yaml b/install/kubernetes/helm/istio/charts/gateways/templates/clusterrole.yaml
index f9b2bc04..4dfb73d9 100644
--- a/install/kubernetes/helm/istio/charts/gateways/templates/clusterrole.yaml
+++ b/install/kubernetes/helm/istio/charts/gateways/templates/clusterrole.yaml
@@ -14,6 +14,14 @@ kind: ClusterRole
 - apiGroups: ["networking.istio.io"]
   resources: ["virtualservices", "destinationrules", "gateways"]
   verbs: ["get", "watch", "list", "update"]
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
 ---
 {{- end }}
 {{- end }}
diff --git a/install/kubernetes/helm/istio/charts/gateways/values.yaml b/install/kubernetes/helm/istio/charts/gateways/values.yaml
index 1284f1c0..5c5d1ca6 100644
--- a/install/kubernetes/helm/istio/charts/gateways/values.yaml
+++ b/install/kubernetes/helm/istio/charts/gateways/values.yaml
@@ -29,10 +29,8 @@ enabled: true
   resources:
     requests:
       cpu: 100m
-      memory: 128Mi
     limits:
       cpu: 2000m
-      memory: 256Mi
   cpu:
     targetAverageUtilization: 80
   loadBalancerIP: ""
@@ -149,10 +147,8 @@ enabled: true
   resources:
     requests:
       cpu: 100m
-      memory: 128Mi
     limits:
       cpu: 2000m
-      memory: 256Mi
   cpu:
     targetAverageUtilization: 80
   serviceAnnotations: {}
diff --git a/install/kubernetes/helm/istio/charts/istiocoredns/templates/clusterrole.yaml b/install/kubernetes/helm/istio/charts/istiocoredns/templates/clusterrole.yaml
index 4242a327..9955ce85 100644
--- a/install/kubernetes/helm/istio/charts/istiocoredns/templates/clusterrole.yaml
+++ b/install/kubernetes/helm/istio/charts/istiocoredns/templates/clusterrole.yaml
@@ -11,3 +11,11 @@ kind: ClusterRole
 - apiGroups: ["networking.istio.io"]
   resources: ["*"]
   verbs: ["get", "watch", "list"]
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
diff --git a/install/kubernetes/helm/istio/charts/kiali/templates/clusterrole.yaml b/install/kubernetes/helm/istio/charts/kiali/templates/clusterrole.yaml
index cd43b7bb..4c6fbdbf 100644
--- a/install/kubernetes/helm/istio/charts/kiali/templates/clusterrole.yaml
+++ b/install/kubernetes/helm/istio/charts/kiali/templates/clusterrole.yaml
@@ -17,6 +17,7 @@ kind: ClusterRole
   - pods
   - services
   - replicationcontrollers
+  - podsecuritypolicies
   verbs:
   - get
   - list
@@ -237,3 +238,11 @@ kind: ClusterRole
   - monitoringdashboards
   verbs:
   - get
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
diff --git a/install/kubernetes/helm/istio/charts/mixer/templates/clusterrole.yaml b/install/kubernetes/helm/istio/charts/mixer/templates/clusterrole.yaml
index 3d7438f2..0e2f93f2 100644
--- a/install/kubernetes/helm/istio/charts/mixer/templates/clusterrole.yaml
+++ b/install/kubernetes/helm/istio/charts/mixer/templates/clusterrole.yaml
@@ -16,9 +16,17 @@ kind: ClusterRole
   resources: ["customresourcedefinitions"]
   verbs: ["get", "list", "watch"]
 - apiGroups: [""]
-  resources: ["configmaps", "endpoints", "pods", "services", "namespaces", "secrets", "replicationcontrollers"]
+  resources: ["configmaps", "endpoints", "pods", "services", "namespaces", "secrets",                        "replicationcontrollers"]
   verbs: ["get", "list", "watch"]
 - apiGroups: ["extensions", "apps"]
   resources: ["replicasets"]
   verbs: ["get", "list", "watch"]
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
 {{- end }}
diff --git a/install/kubernetes/helm/istio/charts/mixer/templates/config.yaml b/install/kubernetes/helm/istio/charts/mixer/templates/config.yaml
index added1b2..72002730 100644
--- a/install/kubernetes/helm/istio/charts/mixer/templates/config.yaml
+++ b/install/kubernetes/helm/istio/charts/mixer/templates/config.yaml
@@ -319,40 +319,6 @@ kind: logentry
     reporter: conditional((context.reporter.kind | "inbound") == "outbound", "source", "destination")
     responseFlags: context.proxy_error_code | ""
   monitored_resource_type: '"global"'
----
-apiVersion: "config.istio.io/v1alpha2"
-kind: rule
-metadata:
-  name: stdio
-  namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "mixer.name" . }}
-    chart: {{ template "mixer.chart" . }}
-    heritage: {{ .Release.Service }}
-    release: {{ .Release.Name }}
-spec:
-  match: context.protocol == "http" || context.protocol == "grpc"
-  actions:
-  - handler: stdio
-    instances:
-    - accesslog.logentry
----
-apiVersion: "config.istio.io/v1alpha2"
-kind: rule
-metadata:
-  name: stdiotcp
-  namespace: {{ .Release.Namespace }}
-  labels:
-    app: {{ template "mixer.name" . }}
-    chart: {{ template "mixer.chart" . }}
-    heritage: {{ .Release.Service }}
-    release: {{ .Release.Name }}
-spec:
-  match: context.protocol == "tcp"
-  actions:
-  - handler: stdio
-    instances:
-    - tcpaccesslog.logentry
 {{- end }}
 ---
 {{- if and .Values.adapters.prometheus.enabled .Values.telemetry.enabled }}
diff --git a/install/kubernetes/helm/istio/charts/mixer/values.yaml b/install/kubernetes/helm/istio/charts/mixer/values.yaml
index df3d41f2..92c48cb2 100644
--- a/install/kubernetes/helm/istio/charts/mixer/values.yaml
+++ b/install/kubernetes/helm/istio/charts/mixer/values.yaml
@@ -39,12 +39,10 @@ image: mixer
   resources:
     requests:
       cpu: 1000m
-      memory: 1G
     limits:
       # It is best to do horizontal scaling of mixer using moderate cpu allocation.
       # We have experimentally found that these values work well.
       cpu: 4800m
-      memory: 4G
 
 podAnnotations: {}
 nodeSelector: {}
diff --git a/install/kubernetes/helm/istio/charts/pilot/templates/clusterrole.yaml b/install/kubernetes/helm/istio/charts/pilot/templates/clusterrole.yaml
index 0435c3eb..9b6fd31d 100644
--- a/install/kubernetes/helm/istio/charts/pilot/templates/clusterrole.yaml
+++ b/install/kubernetes/helm/istio/charts/pilot/templates/clusterrole.yaml
@@ -32,3 +32,11 @@ kind: ClusterRole
 - apiGroups: [""]
   resources: ["endpoints", "pods", "services", "namespaces", "nodes", "secrets"]
   verbs: ["get", "list", "watch"]
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
diff --git a/install/kubernetes/helm/istio/charts/prometheus/templates/clusterrole.yaml b/install/kubernetes/helm/istio/charts/prometheus/templates/clusterrole.yaml
index 06fdfaf5..e12ea9c8 100644
--- a/install/kubernetes/helm/istio/charts/prometheus/templates/clusterrole.yaml
+++ b/install/kubernetes/helm/istio/charts/prometheus/templates/clusterrole.yaml
@@ -20,5 +20,13 @@ kind: ClusterRole
   resources:
   - configmaps
   verbs: ["get"]
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
 - nonResourceURLs: ["/metrics"]
   verbs: ["get"]
diff --git a/install/kubernetes/helm/istio/charts/security/templates/clusterrole.yaml b/install/kubernetes/helm/istio/charts/security/templates/clusterrole.yaml
index cdeb0c05..42c96526 100644
--- a/install/kubernetes/helm/istio/charts/security/templates/clusterrole.yaml
+++ b/install/kubernetes/helm/istio/charts/security/templates/clusterrole.yaml
@@ -20,3 +20,11 @@ kind: ClusterRole
 - apiGroups: ["authentication.k8s.io"]
   resources: ["tokenreviews"]
   verbs: ["create"]
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
diff --git a/install/kubernetes/helm/istio/charts/security/templates/create-custom-resources-job.yaml b/install/kubernetes/helm/istio/charts/security/templates/create-custom-resources-job.yaml
index 4daacdce..1d61049e 100644
--- a/install/kubernetes/helm/istio/charts/security/templates/create-custom-resources-job.yaml
+++ b/install/kubernetes/helm/istio/charts/security/templates/create-custom-resources-job.yaml
@@ -19,19 +19,27 @@ metadata:
     chart: {{ template "security.chart" . }}	
     heritage: {{ .Release.Service }}	
     release: {{ .Release.Name }}	
-rules:	
-- apiGroups: ["authentication.istio.io"] # needed to create default authn policy	
-  resources: ["*"]	
-  verbs: ["*"]	
-- apiGroups: ["networking.istio.io"] # needed to create security destination rules	
-  resources: ["*"]	
-  verbs: ["*"]	
-- apiGroups: ["admissionregistration.k8s.io"]	
-  resources: ["validatingwebhookconfigurations"]	
-  verbs: ["get"]	
-- apiGroups: ["extensions", "apps"]	
-  resources: ["deployments", "replicasets"]	
-  verbs: ["get", "list", "watch"]	
+rules:
+- apiGroups: ["authentication.istio.io"] # needed to create default authn policy
+  resources: ["*"]
+  verbs: ["*"]
+- apiGroups: ["networking.istio.io"] # needed to create security destination rules
+  resources: ["*"]
+  verbs: ["*"]
+- apiGroups: ["admissionregistration.k8s.io"]
+  resources: ["validatingwebhookconfigurations"]
+  verbs: ["get"]
+- apiGroups: ["extensions", "apps"]
+  resources: ["deployments", "replicasets"]
+  verbs: ["get", "list", "watch"]
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
 ---
 apiVersion: rbac.authorization.k8s.io/v1beta1	
 kind: ClusterRoleBinding	
diff --git a/install/kubernetes/helm/istio/charts/sidecarInjectorWebhook/templates/clusterrole.yaml b/install/kubernetes/helm/istio/charts/sidecarInjectorWebhook/templates/clusterrole.yaml
index 27f9acb5..f0bdbbb5 100644
--- a/install/kubernetes/helm/istio/charts/sidecarInjectorWebhook/templates/clusterrole.yaml
+++ b/install/kubernetes/helm/istio/charts/sidecarInjectorWebhook/templates/clusterrole.yaml
@@ -15,3 +15,11 @@ kind: ClusterRole
 - apiGroups: ["admissionregistration.k8s.io"]
   resources: ["mutatingwebhookconfigurations"]
   verbs: ["get", "list", "watch", "patch"]
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
diff --git a/install/kubernetes/helm/istio/templates/clusterrole.yaml b/install/kubernetes/helm/istio/templates/clusterrole.yaml
index b92c9ef8..32a89610 100644
--- a/install/kubernetes/helm/istio/templates/clusterrole.yaml
+++ b/install/kubernetes/helm/istio/templates/clusterrole.yaml
@@ -3,9 +3,17 @@ apiVersion: rbac.authorization.k8s.io/v1
 metadata:
   name: istio-reader
 rules:
-  - apiGroups: ['']
-    resources: ['nodes', 'pods', 'services', 'endpoints', "replicationcontrollers"]
-    verbs: ['get', 'watch', 'list']
-  - apiGroups: ["extensions", "apps"]
-    resources: ["replicasets"]
-    verbs: ["get", "list", "watch"]
+- apiGroups: ['']
+  resources: ['nodes', 'pods', 'services', 'endpoints', "replicationcontrollers"]
+  verbs: ['get', 'watch', 'list']
+- apiGroups: ["extensions", "apps"]
+  resources: ["replicasets"]
+  verbs: ["get", "list", "watch"]
+- apiGroups:
+  - extensions
+  resourceNames:
+  - psp-istio
+  resources:
+  - podsecuritypolicies
+  verbs:
+  - use
diff --git a/install/kubernetes/helm/istio/values-istio-demo-common.yaml b/install/kubernetes/helm/istio/values-istio-demo-common.yaml
index 601555f5..caa356b7 100644
--- a/install/kubernetes/helm/istio/values-istio-demo-common.yaml
+++ b/install/kubernetes/helm/istio/values-istio-demo-common.yaml
@@ -8,7 +8,6 @@
     resources:
       requests:
         cpu: 10m
-        memory: 40Mi
 
   disablePolicyChecks: false
 
@@ -24,10 +23,8 @@
   resources:
     requests:
       cpu: 10m
-      memory: 100Mi
     limits:
       cpu: 100m
-      memory: 200Mi
 
 mixer:
   policy:
@@ -35,20 +32,16 @@
     resources:
       requests:
         cpu: 10m
-        memory: 100Mi
       limits:
         cpu: 100m
-        memory: 100Mi
 
   telemetry:
     enabled: true
     resources:
       requests:
         cpu: 50m
-        memory: 100Mi
       limits:
         cpu: 100m
-        memory: 100Mi
  
   adapters:
     stdio:
@@ -69,17 +62,13 @@
     resources:
       requests:
         cpu: 10m
-        memory: 40Mi
       limits:
         cpu: 100m
-        memory: 128Mi
 
   istio-egressgateway:
     enabled: true
     resources:
       requests:
         cpu: 10m
-        memory: 40Mi
       limits:
         cpu: 100m
-        memory: 128Mi
diff --git a/install/kubernetes/helm/istio/values.yaml b/install/kubernetes/helm/istio/values.yaml
index 55e13caa..7afb737a 100644
--- a/install/kubernetes/helm/istio/values.yaml
+++ b/install/kubernetes/helm/istio/values.yaml
@@ -145,10 +145,8 @@
     resources:
       requests:
         cpu: 100m
-        memory: 128Mi
       limits:
         cpu: 2000m
-        memory: 128Mi
 
     # Controls number of Proxy worker threads.
     # If set to 0 (default), then start worker thread for each CPU thread/core.
-- 
2.21.0

